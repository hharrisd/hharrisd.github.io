<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>custom on Beto Harris</title><link>https://hharrisd.github.io/tags/custom/</link><description>Recent content in custom on Beto Harris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 06 Oct 2022 18:03:18 -0500</lastBuildDate><atom:link href="https://hharrisd.github.io/tags/custom/index.xml" rel="self" type="application/rss+xml"/><item><title>Working with Django Custom Command</title><link>https://hharrisd.github.io/posts/001-django-custom-command/</link><pubDate>Thu, 06 Oct 2022 18:03:18 -0500</pubDate><guid>https://hharrisd.github.io/posts/001-django-custom-command/</guid><description>Introduction Django built-in commands are a powerful tool for performing a lot of management actions like starting a project or an application, creating and migrating migrations, running the internal server, creating users, and many more.
Likewise, Django allows the creation of admin commands to implement custom functionalities, which is a great resource to execute tasks needed in certain moments. Those tasks could be for instance:
Generating / Restoring backups Cleaning up databases Downloading reports Queuing messages Creating a custom command is pretty simple.</description></item></channel></rss>